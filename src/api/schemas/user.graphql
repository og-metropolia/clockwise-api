enum Role {
  ADMIN
  MANAGER
  EMPLOYEE
}

type User {
  id: ID!
  email: String!
  role: Role!
  first_name: String!
  last_name: String!
  language: String!
  job_title: String
  phone: String
  profile_picture: String
  manager: User
  company: Company
}

type Query {
  users: [User!]
  usersByCompany(companyId: ID!, roles: [Role]): [User!]
  user(id: ID!): User!
}

input UserInput {
  email: String!
  password: String!
  first_name: String!
  last_name: String!
  language: String!
  manager: String
  company: String
}

type TokenUser {
  id: ID!
  email: String!
  role: Role!
}

type LoginResponse {
  token: String!
  user: TokenUser!
}

input UpdateUser {
  email: String
  password: String
  role: Role
  first_name: String
  last_name: String
  job_title: String
  phone: String
  language: String
  profile_picture: String
  manager: String
}

type UserResponse {
  id: ID!
  email: String!
  role: Role!
  first_name: String!
  last_name: String!
  job_title: String
  phone: String
  language: String!
  profile_picture: String
  manager: String
  company: String
}

type Mutation {
  createUser(input: UserInput!): UserResponse!
  updateUser(id: ID, input: UpdateUser!): UserResponse!
  deleteUser(id: ID!): UserResponse!
  login(email: String!, password: String!): LoginResponse!
}

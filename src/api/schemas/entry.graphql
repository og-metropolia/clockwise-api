scalar Date

type Entry {
  id: ID!
  user_id: ID!
  type: EntryTypes!
  start_timestamp: Date!
  end_timestamp: Date!
}

enum EntryTypes {
  working
  sick_child
  holiday_leave
  special_leave
  sick_leave
  unpaid_leave
  other
}

type Query {
  entry(id: ID!): Entry!
  entryLatestModified(input: InputEntryTypeOnly): OutputEntryLatestModified

  entries: [Entry]
  entriesByType(input: InputEntryByTypeAndTimestamp): [Entry]
}

input InputEntry {
  type: EntryTypes!
  start_timestamp: Date!
  end_timestamp: Date
}

input InputEntryTypeOnly {
  type: EntryTypes!
}

input InputEntryByTypeAndTimestamp {
  type: EntryTypes!
  min_timestamp: Date
  max_timestamp: Date
}

type OutputEntryLatestModified {
  id: ID!
  user_id: ID!
  type: EntryTypes!
  start_timestamp: Date!
  end_timestamp: Date
}

input UpdateEntry {
  user_id: ID
  type: EntryTypes
  start_timestamp: Date
  end_timestamp: Date
}

type Mutation {
  createEntry(input: InputEntry): Entry
  updateEntry(id: ID!, input: UpdateEntry): Entry
  deleteEntry(id: ID!): Entry
}
